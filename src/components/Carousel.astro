---
const slides = [
  {
    // image: "/assets/img/banner4.jpeg",
    image: "https://lh3.googleusercontent.com/d/1v9q6UbXm03bnRD0il_VBvLtEUgjE5UQN"
  },
  {
    // image: "/assets/img/banner3.jpeg",
    image: "https://lh3.googleusercontent.com/d/1MdLHwjYRmhni_eEl3xDqGVOP2a8fiS9F"
  },
  {
    // image: "/assets/img/banner1.jpg",
    image: "https://lh3.googleusercontent.com/d/169fzU-eh-CuhEqGPiW33_CsrYU11hhLb"
  },
];
---

<div class="relative w-full h-[600px] overflow-hidden" id="carousel">
  <!-- Texto fijo con nuevo filtro más oscuro -->
  <div
    class="absolute inset-0 bg-[#282d5f]/80 flex items-center justify-center z-10"
  >
    <div class="text-center text-white px-4 max-w-4xl">
      <h1 class="text-4xl font-bold mb-4">Bienvenido a SEDIPRO UNT</h1>
      <p class="text-lg">
        Una de las razones principales de estar en Sedipro, es que en cada
        proyecto siempre intentamos hacerlo con una sonrisa. ¡Pero esta vez,
        queremos compartir esa sonrisa contigo! Síguenos en nuestras redes
        sociales y entérate de todos los proyectos que tenemos para ti.
      </p>
    </div>
  </div>

  <!-- Carrusel de imágenes -->
  <div class="absolute inset-0 h-full">
    <div
      class="flex transition-transform duration-[3000ms] ease-in-out h-full"
      id="carouselSlides"
      style="transform: translateX(-100%)"
    >
      <!-- Clon del último slide para transición infinita -->
      <div class="w-full h-full flex-none">
        <img
          src={slides[slides.length - 1].image}
          alt="Clon del último slide"
          class="w-full h-full object-cover"
        />
      </div>
      <!-- Slides originales -->
      {
        slides.map((slide, index) => (
          <div class="w-full h-full flex-none">
            <img
              src={slide.image}
              alt={`Slide ${index}`}
              class="w-full h-full object-cover"
            />
          </div>
        ))
      }
      <!-- Clon del primer slide para transición infinita -->
      <div class="w-full h-full flex-none">
        <img
          src={slides[0].image}
          alt="Clon del primer slide"
          class="w-full h-full object-cover"
        />
      </div>
    </div>
  </div>

  <!-- Indicadores -->
  <div
    class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-20"
  >
    {
      slides.map((_, index) => (
        <button
          class="w-3 h-3 rounded-full bg-white/50 hover:bg-white transition-colors duration-200 indicator"
          data-index={index}
        />
      ))
    }
  </div>
</div>

<script>
  const carouselSlides = document.getElementById(
    "carouselSlides"
  ) as HTMLElement | null;
  const indicators = document.querySelectorAll(".indicator");

  if (!carouselSlides) {
    console.error('No se encontró el elemento con id "carouselSlides".');
    throw new Error('El elemento con id "carouselSlides" no existe en el DOM.');
  }

  const slideCount = indicators.length;
  let currentSlide = 1; // Empezamos en el primer slide real (después del clon del último)

  function updateCarousel() {
    if (carouselSlides) {
      carouselSlides.style.transition = "transform 3000ms ease-in-out";
      carouselSlides.style.transform = `translateX(-${currentSlide * 100}%)`;
    }

    // Actualizar indicadores
    indicators.forEach((indicator, index) => {
      indicator.classList.toggle("bg-white", index === currentSlide - 1);
      indicator.classList.toggle("bg-white/50", index !== currentSlide - 1);
    });
  }

  function resetCarousel() {
    // Sin transición, "saltamos" al inicio o al final según corresponda
    if (carouselSlides) {
      carouselSlides.style.transition = "none";
      if (currentSlide === 0) {
        currentSlide = slideCount; // Saltar al último slide real
      } else if (currentSlide === slideCount + 1) {
        currentSlide = 1; // Saltar al primer slide real
      }
      carouselSlides.style.transform = `translateX(-${currentSlide * 100}%)`;
    }
  }

  // Auto-play
  setInterval(() => {
    currentSlide++;
    updateCarousel();

    // Resetear el carrusel si llega a los clones
    setTimeout(() => {
      if (currentSlide === 0 || currentSlide === slideCount + 1) {
        resetCarousel();
      }
    }, 3000); // Esperar a que termine la transición
  }, 5000);

  // Inicializar posición
  updateCarousel();
</script>
