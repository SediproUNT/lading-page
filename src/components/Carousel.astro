---
const slides = [
  {
    // image: "/assets/img/banner4.jpeg",
    image:
      "https://lh3.googleusercontent.com/d/1v9q6UbXm03bnRD0il_VBvLtEUgjE5UQN",
  },
  {
    // image: "/assets/img/banner3.jpeg",
    image:
      "https://lh3.googleusercontent.com/d/1MdLHwjYRmhni_eEl3xDqGVOP2a8fiS9F",
  },
  {
    // image: "/assets/img/banner1.jpg",
    image:
      "https://lh3.googleusercontent.com/d/169fzU-eh-CuhEqGPiW33_CsrYU11hhLb",
  },
];
---

<div class="relative w-full h-[530px] overflow-hidden" id="carousel">
  <!-- Texto fijo con filtro oscuro -->
  <div
    class="absolute inset-0 bg-[#282d5f]/80 flex items-center justify-center z-10"
  >
    <div class="text-center text-white px-4 max-w-4xl">
      <h1 class="text-4xl font-bold mb-4">Bienvenido a SEDIPRO UNT</h1>
      <p class="text-lg">
        Una de las razones principales de estar en Sedipro, es que en cada
        proyecto siempre intentamos hacerlo con una sonrisa. ¡Pero esta vez,
        queremos compartir esa sonrisa contigo! Síguenos en nuestras redes
        sociales y entérate de todos los proyectos que tenemos para ti.
      </p>
    </div>
  </div>

  <!-- Carrusel de imágenes -->
  <div class="absolute inset-0 h-full">
    <div
      class="flex transition-transform duration-[3000ms] ease-in-out h-full"
      id="carouselSlides"
      style="transform: translateX(-100%)"
    >
      <!-- Clon del último slide -->
      <div class="w-full h-full flex-none">
        <img
          src={slides[slides.length - 1].image}
          alt="Clon del último slide"
          class="w-full h-full object-cover"
        />
      </div>
      <!-- Slides originales -->
      {
        slides.map((slide, index) => (
          <div class="w-full h-full flex-none">
            <img
              src={slide.image}
              alt={`Slide ${index}`}
              class="w-full h-full object-cover"
            />
          </div>
        ))
      }
      <!-- Clon del primer slide -->
      <div class="w-full h-full flex-none">
        <img
          src={slides[0].image}
          alt="Clon del primer slide"
          class="w-full h-full object-cover"
        />
      </div>
    </div>
  </div>

  <!-- Indicadores -->
  <div
    class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-20"
  >
    {
      slides.map((_, index) => (
        <button
          class="w-3 h-3 rounded-full bg-white/50 hover:bg-white transition-colors duration-200 indicator"
          data-index={index}
        />
      ))
    }
  </div>
</div>

<script>
  class Carousel {
    private carouselSlides: HTMLElement;
    private indicators: NodeListOf<Element>;
    private slideCount: number;
    private currentSlide: number;

    constructor() {
      const slides = document.getElementById("carouselSlides");
      if (!slides) {
        throw new Error('Elemento "carouselSlides" no encontrado');
      }

      this.carouselSlides = slides;
      this.indicators = document.querySelectorAll(".indicator");
      this.slideCount = this.indicators.length;
      this.currentSlide = 1;

      this.init();
    }

    private updateCarousel(): void {
      this.carouselSlides.style.transition = "transform 3000ms ease-in-out";
      this.carouselSlides.style.transform = `translateX(-${this.currentSlide * 100}%)`;

      this.indicators.forEach((indicator, index) => {
        indicator.classList.toggle("bg-white", index === this.currentSlide - 1);
        indicator.classList.toggle(
          "bg-white/50",
          index !== this.currentSlide - 1
        );
      });
    }

    private resetCarousel(): void {
      this.carouselSlides.style.transition = "none";
      if (this.currentSlide === 0) {
        this.currentSlide = this.slideCount;
      } else if (this.currentSlide === this.slideCount + 1) {
        this.currentSlide = 1;
      }
      this.carouselSlides.style.transform = `translateX(-${this.currentSlide * 100}%)`;
    }

    private init(): void {
      setInterval(() => {
        this.currentSlide++;
        this.updateCarousel();

        setTimeout(() => {
          if (
            this.currentSlide === 0 ||
            this.currentSlide === this.slideCount + 1
          ) {
            this.resetCarousel();
          }
        }, 3000);
      }, 5000);

      this.updateCarousel();
    }
  }

  // Iniciar el carrusel cuando el DOM esté listo
  document.addEventListener("DOMContentLoaded", () => {
    try {
      new Carousel();
    } catch (error) {
      console.error("Error al inicializar el carrusel:", error);
    }
  });
</script>
