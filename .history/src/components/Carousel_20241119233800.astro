// src/components/Carousel.astro
---
const slides = [
  {
    image: '/assets/img/banner4.jpeg',
    title: 'Bienvenido a SEDIPRO UNT',
    content: 'Una de las razones principales de estar en Sedipro, es que en cada proyecto siempre intentamos hacerlo con una sonrisa.'
  },
  {
    image: '/assets/img/banner3.jpeg',
    title: 'Bienvenido a SEDIPRO UNT',
    content: 'Síguenos en nuestras redes sociales y entérate de todos los proyectos que tenemos para ti.'
  },
  {
    image: '/assets/img/banner1.jpg',
    title: 'Bienvenido a SEDIPRO UNT',
    content: ''
  }
];
---

<div class="relative w-full h-[600px] overflow-hidden" id="carousel">
  <div class="flex transition-transform duration-500 h-full">
    {slides.map((slide, index) => (
      <div class="w-full h-full flex-none">
        <div class="relative w-full h-full">
          <img 
            src={slide.image} 
            alt={slide.title}
            class="w-full h-full object-cover"
          />
          <div class="absolute inset-0 bg-black/40 flex items-center justify-center">
            <div class="text-center text-white px-4 max-w-4xl">
              <h1 class="text-4xl font-bold mb-4">{slide.title}</h1>
              {slide.content && <p class="text-lg">{slide.content}</p>}
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>

  <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
    {slides.map((_, index) => (
      <button 
        class="w-3 h-3 rounded-full bg-white/50 hover:bg-white transition-colors duration-200 indicator"
        data-index={index}
      />
    ))}
  </div>

  <button 
    class="absolute left-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-white/30 hover:bg-white/50 transition-colors duration-200"
    id="prevBtn"
  >
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 19l-7-7 7-7" />
    </svg>
  </button>

  <button 
    class="absolute right-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-white/30 hover:bg-white/50 transition-colors duration-200"
    id="nextBtn"
  >
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
    </svg>
  </button>
</div>

<script>
  const carousel = document.querySelector('#carousel .flex') as HTMLElement;
  const slides = document.querySelectorAll('#carousel .flex-none');
  const indicators = document.querySelectorAll('.indicator');
  const prevBtn = document.getElementById('prevBtn');
  const nextBtn = document.getElementById('nextBtn');

  let currentSlide = 0;

  function updateCarousel() {
    carousel.style.transform = `translateX(-${currentSlide * 100}%)`;
    indicators.forEach((indicator, index) => {
      indicator.classList.toggle('bg-white', index === currentSlide);
      indicator.classList.toggle('bg-white/50', index !== currentSlide);
    });
  }

  indicators.forEach((indicator, index) => {
    indicator.addEventListener('click', () => {
      currentSlide = index;
      updateCarousel();
    });
  });

  prevBtn?.addEventListener('click', () => {
    currentSlide = (currentSlide - 1 + slides.length) % slides.length;
    updateCarousel();
  });

  nextBtn?.addEventListener('click', () => {
    currentSlide = (currentSlide + 1) % slides.length;
    updateCarousel();
  });

  // Auto-play
  setInterval(() => {
    currentSlide = (currentSlide + 1) % slides.length;
    updateCarousel();
  }, 5000);

  updateCarousel();
</script>